name: Destroy

env:
  IMAGE_TAG: ${{ github.sha }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to destroy (prod, dev)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Select .tfvars file for environment
        run: |
          ENV_FILE="${{ github.workspace }}/terraform/bot/${{ github.event.inputs.environment }}.tfvars"
          echo "Selecting .tfvars file for environment: $ENV_FILE"
          if [[ ! -f "$ENV_FILE" ]]; then
            echo "Error: $ENV_FILE does not exist!"
            exit 1
          fi

      - name: Terraform Init
        working-directory: terraform/bot
        run: terraform init -backend-config="${{ github.event.inputs.environment }}.backend" -reconfigure

      - name: Terraform Format
        working-directory: terraform/bot
        run: terraform fmt -check

      - name: Terraform Plan (destroy)
        working-directory: terraform/bot
        env:
          TF_VAR_image_tag: dummy
        run: terraform plan -destroy -input=false -var-file="${{ github.event.inputs.environment }}.tfvars"

      - name: Terraform Destroy
        working-directory: terraform/bot
        env:
          TF_VAR_image_tag: dummy
        run: terraform destroy -auto-approve -input=false -var-file="${{ github.event.inputs.environment }}.tfvars" -var "lambda_zip_exists=false"
